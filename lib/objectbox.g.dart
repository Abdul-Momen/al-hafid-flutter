// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again:
// With a Flutter package, run `flutter pub run build_runner build`.
// With a Dart package, run `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart';
import 'package:objectbox_sync_flutter_libs/objectbox_sync_flutter_libs.dart';

import 'states/models/wishlist_model.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <ModelEntity>[
  ModelEntity(
      id: const IdUid(1, 5331555853424399734),
      name: 'WishlistModel',
      lastPropertyId: const IdUid(9, 2888827785768193004),
      flags: 2,
      properties: <ModelProperty>[
        ModelProperty(
            id: const IdUid(1, 8969104046396184391),
            name: 'id',
            type: 6,
            flags: 1),
        ModelProperty(
            id: const IdUid(2, 2975208203055725851),
            name: 'title',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(3, 4689096597864441609),
            name: 'status',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(4, 6485736205751774824),
            name: 'image',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(5, 7204826950606498672),
            name: 'price',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(6, 4038533872750523679),
            name: 'stock',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(7, 7820495269663763252),
            name: 'isFavorite',
            type: 1,
            flags: 0),
        ModelProperty(
            id: const IdUid(8, 8365068255568493236),
            name: 'adminGraphQlapiId',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(9, 2888827785768193004),
            name: 'quantity',
            type: 6,
            flags: 0)
      ],
      relations: <ModelRelation>[],
      backlinks: <ModelBacklink>[])
];

/// Open an ObjectBox store with the model declared in this file.
Future<Store> openStore(
        {String? directory,
        int? maxDBSizeInKB,
        int? fileMode,
        int? maxReaders,
        bool queriesCaseSensitiveDefault = true,
        String? macosApplicationGroup}) async =>
    Store(getObjectBoxModel(),
        directory: directory ?? (await defaultStoreDirectory()).path,
        maxDBSizeInKB: maxDBSizeInKB,
        fileMode: fileMode,
        maxReaders: maxReaders,
        queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
        macosApplicationGroup: macosApplicationGroup);

/// ObjectBox model definition, pass it to [Store] - Store(getObjectBoxModel())
ModelDefinition getObjectBoxModel() {
  final model = ModelInfo(
      entities: _entities,
      lastEntityId: const IdUid(1, 5331555853424399734),
      lastIndexId: const IdUid(0, 0),
      lastRelationId: const IdUid(0, 0),
      lastSequenceId: const IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, EntityDefinition>{
    WishlistModel: EntityDefinition<WishlistModel>(
        model: _entities[0],
        toOneRelations: (WishlistModel object) => [],
        toManyRelations: (WishlistModel object) => {},
        getId: (WishlistModel object) => object.id,
        setId: (WishlistModel object, int id) {
          object.id = id;
        },
        objectToFB: (WishlistModel object, fb.Builder fbb) {
          final titleOffset = fbb.writeString(object.title);
          final statusOffset = fbb.writeString(object.status);
          final imageOffset = fbb.writeString(object.image);
          final priceOffset = fbb.writeString(object.price);
          final stockOffset = fbb.writeString(object.stock);
          final adminGraphQlapiIdOffset =
              fbb.writeString(object.adminGraphQlapiId);
          fbb.startTable(10);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, titleOffset);
          fbb.addOffset(2, statusOffset);
          fbb.addOffset(3, imageOffset);
          fbb.addOffset(4, priceOffset);
          fbb.addOffset(5, stockOffset);
          fbb.addBool(6, object.isFavorite);
          fbb.addOffset(7, adminGraphQlapiIdOffset);
          fbb.addInt64(8, object.quantity);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);

          final object = WishlistModel(
              id: const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0),
              title: const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 6, ''),
              status: const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 8, ''),
              image: const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 10, ''),
              price: const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 12, ''),
              stock: const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 14, ''),
              isFavorite: const fb.BoolReader()
                  .vTableGet(buffer, rootOffset, 16, false),
              adminGraphQlapiId: const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 18, ''),
              quantity:
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 20, 0));

          return object;
        })
  };

  return ModelDefinition(model, bindings);
}

/// [WishlistModel] entity fields to define ObjectBox queries.
class WishlistModel_ {
  /// see [WishlistModel.id]
  static final id =
      QueryIntegerProperty<WishlistModel>(_entities[0].properties[0]);

  /// see [WishlistModel.title]
  static final title =
      QueryStringProperty<WishlistModel>(_entities[0].properties[1]);

  /// see [WishlistModel.status]
  static final status =
      QueryStringProperty<WishlistModel>(_entities[0].properties[2]);

  /// see [WishlistModel.image]
  static final image =
      QueryStringProperty<WishlistModel>(_entities[0].properties[3]);

  /// see [WishlistModel.price]
  static final price =
      QueryStringProperty<WishlistModel>(_entities[0].properties[4]);

  /// see [WishlistModel.stock]
  static final stock =
      QueryStringProperty<WishlistModel>(_entities[0].properties[5]);

  /// see [WishlistModel.isFavorite]
  static final isFavorite =
      QueryBooleanProperty<WishlistModel>(_entities[0].properties[6]);

  /// see [WishlistModel.adminGraphQlapiId]
  static final adminGraphQlapiId =
      QueryStringProperty<WishlistModel>(_entities[0].properties[7]);

  /// see [WishlistModel.quantity]
  static final quantity =
      QueryIntegerProperty<WishlistModel>(_entities[0].properties[8]);
}
